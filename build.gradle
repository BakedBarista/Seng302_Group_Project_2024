plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
  id 'org.sonarqube' version '4.0.0.2929'
}

group = 'nz.ac.canterbury.seng302.team-800'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'org.webjars:bootstrap:5.3.3'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.destination file("$buildDir/jacoco/test-report.xml")
		csv.destination file("$buildDir/jacoco/test-report.csv")
		html.destination file("$buildDir/jacoco/html")
	}
}

sonar {
  properties {
    property "sonar.projectKey", "seng302-2024-team800"
		property "sonar.projectName", "seng302-2024-team800"
		property "sonar.sourceEncoding", "UTF-8"
    property "sonar.host.url", "https://sonarqube.csse.canterbury.ac.nz"
		property "sonar.login", "$System.env.SONARQUBE_TOKEN"
  }
}
